(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Snq = factory());
})(this, (function () { 'use strict';

  function snq(callback, defaultValue) {
    try {
      const result = callback();
      return typeof result === 'undefined' ? defaultValue : result;
    } catch (err) {
      if (err instanceof TypeError) {
        return defaultValue;
      }

      throw err;
    }
  }

  return snq;

}));
